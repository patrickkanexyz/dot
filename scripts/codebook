#!/bin/sh
# Codebook:
# Document how you did things so you don't have to reinvent the wheel.
# All notes can be exported as HTML for easy of navigation.

main () {
	# commandline arguments
	LANG=$1
	TITLE=$2

	CBROOT=${CODEBOOK_ROOT:-$HOME/.local/share/codebook}

	# Check for file tree and initialze it if not found
	if [ ! -d "${CBROOT}" ]; then
		CONT="false"
		while [ $CONT = "false" ]
		do
			read -p "Codebook base directory doesn't exist; create it? (y/N) " ANSWER

			case $ANSWER in
				"y"|"Y"|"yes")
					# build file tree
					buildFileTree $CBROOT
					CONT="true"
					;;
				"n"|"N"|"no")
					echo "No base directory found. Exiting..."
					exit 1
					;;
				*)
					echo "${ANSWER} is not a valid response..."
					;;
			esac

		done
	fi
	checkFileTree

	# Check for too many or few args
	if [ $# -gt 2 ] || [ $# -eq 0 ]; then
		usage
		exit 1
	fi

	# Check if 'build' was selected
	if [ $# -eq 1 ] && [ $LANG = "build" ]; then
		echo "Building site..."
		exit 0
	fi

	# Add any directories and create new .md file
	if [ ! -d "${CBROOT}/lang/${LANG}" ]; then
		echo "Creating directory for ${LANG}"
		mkdir ${CBROOT}/lang/${LANG}/
	fi
	touch ${CBROOT}/lang/${LANG}/$TITLE.md
	echo "Creating ${TITLE}.md..."
}

# ----------------------------- COMMAND LINE ----------------------------------
# TODO Include support for -h


# Helper Functions

# Checks that important subdirectories exist and creates them if they don't.
checkFileTree () {
	if [ ! -d "${CBROOT}" ]; then
		echo "Codebook root directory does not exist. Exiting..."
		exit 1
	fi
	if [ ! -d "${CBROOT}/lang/" ]; then
		echo "Codebook lang directory does not exist. Creating directory..."
		mkdir ${CBROOT}/lang/
	fi
	if [ ! -d "${CBROOT}/html/" ]; then
		echo "Codebook html directory does not exist. Creating directory..."
		mkdir ${CBROOT}/html/
	fi
	if [ ! -d "${CBROOT}/html/site/" ]; then
		echo "Codebook html/site directory does not exist. Creating directory..."
		mkdir ${CBROOT}/html/site/
	fi
	if [ ! -d "${CBROOT}/html/templates/" ]; then
		echo "Codebook html/templates directory does not exist. Creating directory..."
		mkdir ${CBROOT}/html/templates/
	fi
}

buildFileTree () {
	mkdir $1 $1/lang/ $1/html/ $1/html/templates/	$1/html/site/
}

usage () {
	printf "Usage: codebook [language] [Title]\n"
}

main $@
